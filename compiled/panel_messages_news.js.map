{"version":3,"file":"panel_messages_news.js","names":["WiadomosciUczestnika","useEffect","useState","useRef","useCallback","createRef","React","gather","kon","nitro","zebra","Dialog","showDialog","jsx","___EmotionJSX","NewMessagesPinnedDialog","Component","constructor","undefined","state","holderVisible","panelVisible","error","messageCount","refresher","loadStateFromCookie","loadNewMessageCountFromServer","countChangedCallback","cookie_name","cookie","getCookie","spl","split","holder","panel","saveStateToCookie","setCookie","componentDidUpdate","prevProps","prevState","_prevContext","render","createElement","message","popup_newmessages_classes","push","className","NewMessagesPanel","onClick","flipHolderVisibility","bind","join","flipPanelVisibility","setInterval","res","newCount","parseInt","setState","decreaseCounter","amount","forceUpdate","modular","showMessagesPanel","is_admin","dialogs","showRenderedDialog","messages","searchResults","searchResultsUcz","loadMessagesFromServer","refresherInterval","chidServer","chid","curMessPart","loadMoreMessages","loadingMore","props","concat","method","body","index","count","placeholder","messages_els","map","foundObj","idx","attender","unreadSMSCount","personalInfo","parentInfo","place","id","firstName","lastName","phoneNum","number","hasNewMessages","tit","name","userClicked","uczestnikId","key","sms","attenders","changeItterator","latestMessage","unreadMessagesCount","length","re_mapped","i","u","imie","nazwisko","place_name","fixN","n","toLowerCase","replaceAll","found","find","f","placeOnly","hidden","forEach","onChange","searchboxValueChanged","searchboxInputEL","currentSearchId","currentSearchTypeId","event","val","target","value","randex","Math","random","setTimeout","rande","str"],"sources":["../uncompiled/panel_messages_news.js"],"sourcesContent":["//import {fet} from \"../script_support\"\r\nimport WiadomosciUczestnika from \"./wiadomosci_dialog\";\r\nconst { useEffect,useState,useRef,useCallback, createRef } = React\r\nimport {gather, kon, nitro, zebra} from \"./main.js\";\r\nimport {Dialog, showDialog} from \"./dialog.js\";\r\n\r\n//asdf\r\n\r\nclass NewMessagesPinnedDialog extends React.Component {\r\n    constructor() {\r\n        super(undefined);\r\n\r\n        this.state = {\r\n            holderVisible: true,\r\n            panelVisible: false,\r\n            error: null,\r\n            messageCount: -1\r\n        }\r\n\r\n        this.refresher = null\r\n        this.loadStateFromCookie()\r\n        this.loadNewMessageCountFromServer()\r\n        this.countChangedCallback = null\r\n    }\r\n    cookie_name = \"newMessagesPinnedDialogVisibility\"\r\n    loadStateFromCookie() {\r\n        const cookie = getCookie(this.cookie_name)\r\n        if(cookie != null) {\r\n            const spl = cookie.split(\":\")\r\n            const holder = spl[0] === \"true\"\r\n            const panel = spl[1] === \"true\"\r\n\r\n            this.state.holderVisible = holder\r\n            this.state.panelVisible = panel\r\n        } else {\r\n            this.saveStateToCookie()\r\n        }\r\n    }\r\n    saveStateToCookie() {\r\n        setCookie(this.cookie_name,(this.state.holderVisible ? \"true\" : \"false\") + \":\" + (this.state.panelVisible ? \"true\" : \"false\"),365);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, _prevContext) {}\r\n    render() {\r\n        const holderVisible = this.state.holderVisible\r\n        const panelVisible = this.state.panelVisible\r\n\r\n        if(this.state.error != null) {\r\n            return <span>err! {this.state.error.message}</span>\r\n        }\r\n        if(this.state.messageCount === -1) {\r\n            this.loadNewMessageCountFromServer()\r\n        }\r\n\r\n        const popup_newmessages_classes = [\"popup_newmessages\"];\r\n        if(!holderVisible) {\r\n            popup_newmessages_classes.push(\"hidden\");\r\n        }\r\n        /*if(this.state.shouldBlink) {\r\n            popup_newmessages_classes.push(\"pulse-anim-single\")\r\n        }*/\r\n\r\n        const messageCount = this.state.messageCount\r\n// counterDecreaser={this.decreaseCounter.bind(this)} globalMessageCounterUpdater={this.loadNewMessageCountFromServer.bind(this)}\r\n        return (\r\n            <div className=\"newmessages_ui_container\">\r\n                {holderVisible && panelVisible ? <NewMessagesPanel holder={this}/> : null}\r\n                <div className=\"newmessages_holder\">\r\n                    <div className={\"hide_button \"+((!holderVisible && messageCount > 0)  ? \"pulse-anim\" : \"\")} onClick={this.flipHolderVisibility.bind(this)}>\r\n                        <div>\r\n                            <i className={\"fa-solid fa-angle-\"+(holderVisible ? \"left\" : \"right\")}></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className={popup_newmessages_classes.join(\" \")} onClick={this.flipPanelVisibility.bind(this)}>\r\n                        <span>Nowe wiadomoÅ›ci {messageCount > 0 ? `(${messageCount})` : \"\"}</span>\r\n                        <div>\r\n                            <i className={\"fa-solid fa-angle-\"+(panelVisible ? \"down\" : \"up\")}></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadNewMessageCountFromServer() {\r\n        if(this.refresher == null) {\r\n            this.refresher = setInterval(()=>{\r\n                this.loadNewMessageCountFromServer()\r\n            },2000)\r\n        }\r\n        /*fet(\"sms/unread_sms_count\").then(res=>{\r\n            const newCount = parseInt(res);\r\n            if(newCount !== this.state.messageCount && this.state.messageCount !== -1) {\r\n                if(this.countChangedCallback != null) {\r\n                    this.countChangedCallback()\r\n                }\r\n            }\r\n            this.setState({messageCount: newCount})\r\n        }).catch(err=>{\r\n            this.setState({error: parseInt(err.toString())})\r\n        })*/\r\n            zebra(\"sms/unreadSMSCount\",(res)=>{\r\n                const newCount = parseInt(res)\r\n                if(newCount !== this.state.messageCount && this.state.messageCount !== -1) {\r\n                    if(this.countChangedCallback != null) {\r\n                        this.countChangedCallback()\r\n                    }\r\n                }\r\n                this.setState({messageCount: newCount})\r\n            },kon(this,\"error\"))\r\n    }\r\n\r\n    decreaseCounter(amount) {\r\n        this.setState({messageCount: this.state.messageCount-amount})\r\n    }\r\n\r\n    flipHolderVisibility() {\r\n        this.state.holderVisible = !this.state.holderVisible\r\n        this.saveStateToCookie()\r\n        this.forceUpdate()\r\n    }\r\n    flipPanelVisibility() {\r\n        this.state.panelVisible = !this.state.panelVisible\r\n        this.saveStateToCookie()\r\n        this.forceUpdate()\r\n    }\r\n}\r\n\r\nmodular.showMessagesPanel = ()=>{\r\n    if(!is_admin) {\r\n        return\r\n    }\r\n    modular.dialogs.showRenderedDialog(<NewMessagesPinnedDialog/>)\r\n}\r\n\r\nclass NewMessagesPanel extends React.Component {\r\n    constructor({holder}) {\r\n        super(undefined);//counterDecreaser,globalMessageCounterUpdater\r\n\r\n        this.state = {\r\n            messages: null,\r\n            error: null,\r\n            searchResults: null,\r\n            searchResultsUcz: null\r\n        }\r\n        this.holder = holder\r\n\r\n        holder.countChangedCallback = ()=>{\r\n            this.loadMessagesFromServer()\r\n        }\r\n        this.loadMessagesFromServer()\r\n\r\n        this.refresherInterval = setInterval(()=>{\r\n            zebra(\"sms/chid\",(chidServer)=>{\r\n                if(this.chid == -1) {\r\n                    this.chid = chidServer\r\n                    return\r\n                }\r\n                if(this.chid == chidServer) {\r\n                    return\r\n                }\r\n                this.chid = chidServer\r\n                this.loadMessagesFromServer()\r\n            },kon(this,\"error\"))\r\n        },2000)\r\n    }\r\n\r\n    chid = -1\r\n    refresherInterval = null\r\n    curMessPart = 1\r\n    loadMoreMessages = ()=> {\r\n        if(this.state.loadingMore) {\r\n            return\r\n        }\r\n        this.setState((state,props)=>{\r\n            return {...state,loadingMore:true}\r\n        })\r\n        zebra(`sms/news`,\r\n            res=>{\r\n                this.setState((state,props)=>{\r\n                    return {...state,messages:state.messages.concat(res),loadingMore:false}\r\n                })\r\n            },\r\n            kon(this,\"error\"),\r\n            {\r\n                method: \"POST\",\r\n                body: {\r\n                    index: this.curMessPart,\r\n                    count: 1\r\n                }\r\n            })\r\n        this.curMessPart = this.curMessPart+1\r\n    }\r\n    loadMessagesFromServer() {\r\n        zebra(`sms/news`,\r\n            kon(this,\"messages\"),\r\n            kon(this,\"error\"),\r\n            {\r\n            method: \"POST\",\r\n            body: {\r\n                index: 0,\r\n                count: this.curMessPart\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n\r\n        if(this.state.error != null) {\r\n            return <span>err! {this.state.error}</span>\r\n        }\r\n\r\n\r\n        if(this.state.messages == null) {\r\n            return (\r\n                <div className=\"newmessages_panel\">\r\n                    <span>Wczytywanie...</span>\r\n                    <input placeholder=\"Szukaj uczestnika\"/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        let messages_els = null\r\n\r\n        if(this.state.searchResults != null) {\r\n            messages_els = this.state.searchResults.map((foundObj, idx) =>{\r\n                const {attender,unreadSMSCount,personalInfo,parentInfo,place} = foundObj\r\n                const id = attender.id\r\n                const {firstName,lastName} = personalInfo\r\n                const phoneNum = parentInfo.number\r\n                const hasNewMessages = unreadSMSCount > 0\r\n\r\n                let tit = <span>{`[${place.name}] ${firstName} ${lastName} ${phoneNum}`}</span>\r\n                function userClicked() {/*number={phoneNum} forceReloadUczestnicyByNumber={true}*/\r\n                    showDialog(<WiadomosciUczestnika uczestnikId={id}/>)\r\n                    // uczestnicy={attenders}\r\n\r\n                    if(hasNewMessages) {\r\n                        this.state.messages[idx][\"unreadSMSCount\"] = 0\r\n                        this.forceUpdate()\r\n                        this.holder.decreaseCounter(unreadSMSCount)\r\n                        this.holder.forceUpdate()\r\n                    }\r\n                }\r\n                return <div className={\"message_pan\"+(hasNewMessages ? \" pulse-anim-single\" : \"\")} onClick={userClicked.bind(this)} key={id}>\r\n                    <div>{tit}</div>{hasNewMessages ? (<span className=\"newmessages_count\">{unreadSMSCount}</span>) : \"\"}\r\n                </div>\r\n            })\r\n        } else {\r\n            messages_els = this.state.messages.map((sms, idx) =>{\r\n                const {attenders,changeItterator,latestMessage,number,unreadMessagesCount} = sms\r\n\r\n                //const {id:id_sms,type,status,read_status,content,number,created_timestamp,sent_timestamp,attenders,unreadSMSCount} = sms\r\n                const hasNewMessages = unreadMessagesCount > 0\r\n\r\n                let tit = <span>{number}</span>\r\n                if(attenders != null && attenders.length > 0) {\r\n                    tit = []\r\n                    const re_mapped = []\r\n                    for (let i = 0; i < attenders.length; i++) {\r\n                        const u = attenders[i]\r\n                        const {id,imie,nazwisko,place} = u\r\n                        const place_name = place.name\r\n\r\n                        function fixN(n) {\r\n                            return n.toLowerCase().replaceAll(\" \",\"\");\r\n                        }\r\n\r\n                        const found = re_mapped.find((f)=>fixN(f['imie']) === fixN(imie) && fixN(f['nazwisko']) === fixN(nazwisko))\r\n                        if(found != null) {\r\n                            if(found.place.name == place_name) {\r\n                                u[\"hidden\"] = true\r\n                            } else {\r\n                                u[\"placeOnly\"] = true\r\n                            }\r\n                        }\r\n                        re_mapped.push(u)\r\n                    }\r\n                    tit = re_mapped.map(({id,imie,nazwisko,place,placeOnly,hidden}, idx)=>{\r\n                        if(hidden) {\r\n                            return null\r\n                        }\r\n                        if(placeOnly) {\r\n                            return <span key={idx}>[{`${place.name}`}]</span>\r\n                        }\r\n                        return <span key={idx}>{`[${place.name}] ${imie} ${nazwisko}`}</span>\r\n                    });\r\n                    attenders.forEach(u=>u['hidePlace'] = false)\r\n                    attenders.forEach(u=>u['hidden'] = false)\r\n                }\r\n                function userClicked() {\r\n                    showDialog(<WiadomosciUczestnika number={number} attenders={attenders}/>)\r\n                    if(hasNewMessages) {\r\n                        this.state.messages[idx][\"unreadMessagesCount\"] = 0\r\n                        this.forceUpdate()\r\n                        this.holder.decreaseCounter(unreadMessagesCount)\r\n                        this.holder.forceUpdate()\r\n                    }\r\n                }\r\n                return <div className={\"message_pan\"+(hasNewMessages ? \" pulse-anim-single\" : \"\")} onClick={userClicked.bind(this)} key={latestMessage.id}>\r\n                    <div>{tit}</div>{hasNewMessages ? (<span className=\"newmessages_count\">{unreadMessagesCount}</span>) : \"\"}\r\n                </div>\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"newmessages_panel\">\r\n                <div>\r\n                    {messages_els}\r\n                    <div className=\"load_more\" onClick={this.loadMoreMessages}>\r\n                        {this.state.searchResults != null ? null :\r\n                            <span>{this.state.loadingMore ? \"czekaj...\" : \"wczytaj wiÄ™cej\"}</span>}\r\n                    </div>\r\n                </div>\r\n                <input placeholder=\"Szukaj uczestnika\" onChange={this.searchboxValueChanged}/>\r\n            </div>\r\n        )\r\n    }\r\n    searchboxInputEL = createRef()\r\n\r\n    currentSearchId = -1\r\n    currentSearchTypeId = -1\r\n    searchboxValueChanged = (event)=>{\r\n        const panel = this\r\n\r\n        const val = event.target.value\r\n\r\n        if(val.length < 1) {\r\n            this.setState({searchResults: null})\r\n            return\r\n        }\r\n\r\n        const randex = Math.random()\r\n        this.currentSearchTypeId = randex\r\n        setTimeout(()=>{\r\n            if(panel.currentSearchTypeId !== randex) {\r\n                return\r\n            }\r\n            const rande = Math.random()\r\n            panel.currentSearchId = rande\r\n            zebra(\"sms/news/find\",(res)=>{\r\n                if(panel.currentSearchId !== rande) {\r\n                    return\r\n                }\r\n                panel.setState({searchResults: res})\r\n            },null,{\r\n                method: \"POST\",\r\n                body: {\r\n                    str: val\r\n                }\r\n            })\r\n        },200)\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,oBAAoB,MAAM,qBAAqB;AACtD,MAAM;EAAEC,SAAS;EAACC,QAAQ;EAACC,MAAM;EAACC,WAAW;EAAEC;AAAU,CAAC,GAAGC,KAAK;AAClE,SAAQC,MAAM,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,QAAO,WAAW;AACnD,SAAQC,MAAM,EAAEC,UAAU,QAAO,aAAa;;AAE9C;AAAA,SAAAC,GAAA,IAAAC,aAAA;AAEA,MAAMC,uBAAuB,SAAST,KAAK,CAACU,SAAS,CAAC;EAClDC,WAAWA,CAAA,EAAG;IACV,KAAK,CAACC,SAAS,CAAC;IAEhB,IAAI,CAACC,KAAK,GAAG;MACTC,aAAa,EAAE,IAAI;MACnBC,YAAY,EAAE,KAAK;MACnBC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE,CAAC;IACnB,CAAC;IAED,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACC,6BAA6B,CAAC,CAAC;IACpC,IAAI,CAACC,oBAAoB,GAAG,IAAI;EACpC;EACAC,WAAW,GAAG,mCAAmC;EACjDH,mBAAmBA,CAAA,EAAG;IAClB,MAAMI,MAAM,GAAGC,SAAS,CAAC,IAAI,CAACF,WAAW,CAAC;IAC1C,IAAGC,MAAM,IAAI,IAAI,EAAE;MACf,MAAME,GAAG,GAAGF,MAAM,CAACG,KAAK,CAAC,GAAG,CAAC;MAC7B,MAAMC,MAAM,GAAGF,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM;MAChC,MAAMG,KAAK,GAAGH,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM;MAE/B,IAAI,CAACZ,KAAK,CAACC,aAAa,GAAGa,MAAM;MACjC,IAAI,CAACd,KAAK,CAACE,YAAY,GAAGa,KAAK;IACnC,CAAC,MAAM;MACH,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC5B;EACJ;EACAA,iBAAiBA,CAAA,EAAG;IAChBC,SAAS,CAAC,IAAI,CAACR,WAAW,EAAC,CAAC,IAAI,CAACT,KAAK,CAACC,aAAa,GAAG,MAAM,GAAG,OAAO,IAAI,GAAG,IAAI,IAAI,CAACD,KAAK,CAACE,YAAY,GAAG,MAAM,GAAG,OAAO,CAAC,EAAC,GAAG,CAAC;EACtI;EACAgB,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAEC,YAAY,EAAE,CAAC;EACxDC,MAAMA,CAAA,EAAG;IACL,MAAMrB,aAAa,GAAG,IAAI,CAACD,KAAK,CAACC,aAAa;IAC9C,MAAMC,YAAY,GAAG,IAAI,CAACF,KAAK,CAACE,YAAY;IAE5C,IAAG,IAAI,CAACF,KAAK,CAACG,KAAK,IAAI,IAAI,EAAE;MACzB,oBAAOhB,KAAA,CAAAoC,aAAA,eAAM,OAAK,EAAC,IAAI,CAACvB,KAAK,CAACG,KAAK,CAACqB,OAAc,CAAC;IACvD;IACA,IAAG,IAAI,CAACxB,KAAK,CAACI,YAAY,KAAK,CAAC,CAAC,EAAE;MAC/B,IAAI,CAACG,6BAA6B,CAAC,CAAC;IACxC;IAEA,MAAMkB,yBAAyB,GAAG,CAAC,mBAAmB,CAAC;IACvD,IAAG,CAACxB,aAAa,EAAE;MACfwB,yBAAyB,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC5C;IACA;AACR;AACA;;IAEQ,MAAMtB,YAAY,GAAG,IAAI,CAACJ,KAAK,CAACI,YAAY;IACpD;IACQ,oBACIjB,KAAA,CAAAoC,aAAA;MAAKI,SAAS,EAAC;IAA0B,GACpC1B,aAAa,IAAIC,YAAY,gBAAGf,KAAA,CAAAoC,aAAA,CAACK,gBAAgB;MAACd,MAAM,EAAE;IAAK,CAAC,CAAC,GAAG,IAAI,eACzE3B,KAAA,CAAAoC,aAAA;MAAKI,SAAS,EAAC;IAAoB,gBAC/BxC,KAAA,CAAAoC,aAAA;MAAKI,SAAS,EAAE,cAAc,IAAG,CAAC1B,aAAa,IAAIG,YAAY,GAAG,CAAC,GAAK,YAAY,GAAG,EAAE,CAAE;MAACyB,OAAO,EAAE,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAAC,IAAI;IAAE,gBACtI5C,KAAA,CAAAoC,aAAA,2BACIpC,KAAA,CAAAoC,aAAA;MAAGI,SAAS,EAAE,oBAAoB,IAAE1B,aAAa,GAAG,MAAM,GAAG,OAAO;IAAE,CAAI,CACzE,CACJ,CAAC,eACNd,KAAA,CAAAoC,aAAA;MAAKI,SAAS,EAAEF,yBAAyB,CAACO,IAAI,CAAC,GAAG,CAAE;MAACH,OAAO,EAAE,IAAI,CAACI,mBAAmB,CAACF,IAAI,CAAC,IAAI;IAAE,gBAC9F5C,KAAA,CAAAoC,aAAA,eAAM,uBAAgB,EAACnB,YAAY,GAAG,CAAC,GAAG,IAAIA,YAAY,GAAG,GAAG,EAAS,CAAC,eAC1EjB,KAAA,CAAAoC,aAAA,2BACIpC,KAAA,CAAAoC,aAAA;MAAGI,SAAS,EAAE,oBAAoB,IAAEzB,YAAY,GAAG,MAAM,GAAG,IAAI;IAAE,CAAI,CACrE,CACJ,CACJ,CACJ,CAAC;EAEd;EAEAK,6BAA6BA,CAAA,EAAG;IAC5B,IAAG,IAAI,CAACF,SAAS,IAAI,IAAI,EAAE;MACvB,IAAI,CAACA,SAAS,GAAG6B,WAAW,CAAC,MAAI;QAC7B,IAAI,CAAC3B,6BAA6B,CAAC,CAAC;MACxC,CAAC,EAAC,IAAI,CAAC;IACX;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACYhB,KAAK,CAAC,oBAAoB,EAAE4C,GAAG,IAAG;MAC9B,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,GAAG,CAAC;MAC9B,IAAGC,QAAQ,KAAK,IAAI,CAACpC,KAAK,CAACI,YAAY,IAAI,IAAI,CAACJ,KAAK,CAACI,YAAY,KAAK,CAAC,CAAC,EAAE;QACvE,IAAG,IAAI,CAACI,oBAAoB,IAAI,IAAI,EAAE;UAClC,IAAI,CAACA,oBAAoB,CAAC,CAAC;QAC/B;MACJ;MACA,IAAI,CAAC8B,QAAQ,CAAC;QAAClC,YAAY,EAAEgC;MAAQ,CAAC,CAAC;IAC3C,CAAC,EAAC/C,GAAG,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC;EAC5B;EAEAkD,eAAeA,CAACC,MAAM,EAAE;IACpB,IAAI,CAACF,QAAQ,CAAC;MAAClC,YAAY,EAAE,IAAI,CAACJ,KAAK,CAACI,YAAY,GAACoC;IAAM,CAAC,CAAC;EACjE;EAEAV,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAAC9B,KAAK,CAACC,aAAa,GAAG,CAAC,IAAI,CAACD,KAAK,CAACC,aAAa;IACpD,IAAI,CAACe,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACyB,WAAW,CAAC,CAAC;EACtB;EACAR,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACjC,KAAK,CAACE,YAAY,GAAG,CAAC,IAAI,CAACF,KAAK,CAACE,YAAY;IAClD,IAAI,CAACc,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACyB,WAAW,CAAC,CAAC;EACtB;AACJ;AAEAC,OAAO,CAACC,iBAAiB,GAAG,MAAI;EAC5B,IAAG,CAACC,QAAQ,EAAE;IACV;EACJ;EACAF,OAAO,CAACG,OAAO,CAACC,kBAAkB,eAAC3D,KAAA,CAAAoC,aAAA,CAAC3B,uBAAuB,MAAC,CAAC,CAAC;AAClE,CAAC;AAED,MAAMgC,gBAAgB,SAASzC,KAAK,CAACU,SAAS,CAAC;EAC3CC,WAAWA,CAAC;IAACgB;EAAM,CAAC,EAAE;IAClB,KAAK,CAACf,SAAS,CAAC,CAAC;;IAEjB,IAAI,CAACC,KAAK,GAAG;MACT+C,QAAQ,EAAE,IAAI;MACd5C,KAAK,EAAE,IAAI;MACX6C,aAAa,EAAE,IAAI;MACnBC,gBAAgB,EAAE;IACtB,CAAC;IACD,IAAI,CAACnC,MAAM,GAAGA,MAAM;IAEpBA,MAAM,CAACN,oBAAoB,GAAG,MAAI;MAC9B,IAAI,CAAC0C,sBAAsB,CAAC,CAAC;IACjC,CAAC;IACD,IAAI,CAACA,sBAAsB,CAAC,CAAC;IAE7B,IAAI,CAACC,iBAAiB,GAAGjB,WAAW,CAAC,MAAI;MACrC3C,KAAK,CAAC,UAAU,EAAE6D,UAAU,IAAG;QAC3B,IAAG,IAAI,CAACC,IAAI,IAAI,CAAC,CAAC,EAAE;UAChB,IAAI,CAACA,IAAI,GAAGD,UAAU;UACtB;QACJ;QACA,IAAG,IAAI,CAACC,IAAI,IAAID,UAAU,EAAE;UACxB;QACJ;QACA,IAAI,CAACC,IAAI,GAAGD,UAAU;QACtB,IAAI,CAACF,sBAAsB,CAAC,CAAC;MACjC,CAAC,EAAC7D,GAAG,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC;IACxB,CAAC,EAAC,IAAI,CAAC;EACX;EAEAgE,IAAI,GAAG,CAAC,CAAC;EACTF,iBAAiB,GAAG,IAAI;EACxBG,WAAW,GAAG,CAAC;EACfC,gBAAgB,GAAGA,CAAA,KAAK;IACpB,IAAG,IAAI,CAACvD,KAAK,CAACwD,WAAW,EAAE;MACvB;IACJ;IACA,IAAI,CAAClB,QAAQ,CAAC,CAACtC,KAAK,EAACyD,KAAK,KAAG;MACzB,OAAO;QAAC,GAAGzD,KAAK;QAACwD,WAAW,EAAC;MAAI,CAAC;IACtC,CAAC,CAAC;IACFjE,KAAK,CAAC,UAAU,EACZ4C,GAAG,IAAE;MACD,IAAI,CAACG,QAAQ,CAAC,CAACtC,KAAK,EAACyD,KAAK,KAAG;QACzB,OAAO;UAAC,GAAGzD,KAAK;UAAC+C,QAAQ,EAAC/C,KAAK,CAAC+C,QAAQ,CAACW,MAAM,CAACvB,GAAG,CAAC;UAACqB,WAAW,EAAC;QAAK,CAAC;MAC3E,CAAC,CAAC;IACN,CAAC,EACDnE,GAAG,CAAC,IAAI,EAAC,OAAO,CAAC,EACjB;MACIsE,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;QACFC,KAAK,EAAE,IAAI,CAACP,WAAW;QACvBQ,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;IACN,IAAI,CAACR,WAAW,GAAG,IAAI,CAACA,WAAW,GAAC,CAAC;EACzC,CAAC;EACDJ,sBAAsBA,CAAA,EAAG;IACrB3D,KAAK,CAAC,UAAU,EACZF,GAAG,CAAC,IAAI,EAAC,UAAU,CAAC,EACpBA,GAAG,CAAC,IAAI,EAAC,OAAO,CAAC,EACjB;MACAsE,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;QACFC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,IAAI,CAACR;MAChB;IACJ,CAAC,CAAC;EACN;EACAhC,MAAMA,CAAA,EAAG;IAEL,IAAG,IAAI,CAACtB,KAAK,CAACG,KAAK,IAAI,IAAI,EAAE;MACzB,oBAAOhB,KAAA,CAAAoC,aAAA,eAAM,OAAK,EAAC,IAAI,CAACvB,KAAK,CAACG,KAAY,CAAC;IAC/C;IAGA,IAAG,IAAI,CAACH,KAAK,CAAC+C,QAAQ,IAAI,IAAI,EAAE;MAC5B,oBACI5D,KAAA,CAAAoC,aAAA;QAAKI,SAAS,EAAC;MAAmB,gBAC9BxC,KAAA,CAAAoC,aAAA,eAAM,gBAAoB,CAAC,eAC3BpC,KAAA,CAAAoC,aAAA;QAAOwC,WAAW,EAAC;MAAmB,CAAC,CACtC,CAAC;IAEd;IAEA,IAAIC,YAAY,GAAG,IAAI;IAEvB,IAAG,IAAI,CAAChE,KAAK,CAACgD,aAAa,IAAI,IAAI,EAAE;MACjCgB,YAAY,GAAG,IAAI,CAAChE,KAAK,CAACgD,aAAa,CAACiB,GAAG,CAAC,CAACC,QAAQ,EAAEC,GAAG,KAAI;QAC1D,MAAM;UAACC,QAAQ;UAACC,cAAc;UAACC,YAAY;UAACC,UAAU;UAACC;QAAK,CAAC,GAAGN,QAAQ;QACxE,MAAMO,EAAE,GAAGL,QAAQ,CAACK,EAAE;QACtB,MAAM;UAACC,SAAS;UAACC;QAAQ,CAAC,GAAGL,YAAY;QACzC,MAAMM,QAAQ,GAAGL,UAAU,CAACM,MAAM;QAClC,MAAMC,cAAc,GAAGT,cAAc,GAAG,CAAC;QAEzC,IAAIU,GAAG,gBAAG5F,KAAA,CAAAoC,aAAA,eAAO,IAAIiD,KAAK,CAACQ,IAAI,KAAKN,SAAS,IAAIC,QAAQ,IAAIC,QAAQ,EAAS,CAAC;QAC/E,SAASK,WAAWA,CAAA,EAAG;UAAC;UACpBxF,UAAU,eAACN,KAAA,CAAAoC,aAAA,CAAC1C,oBAAoB;YAACqG,WAAW,EAAET;UAAG,CAAC,CAAC,CAAC;UACpD;;UAEA,IAAGK,cAAc,EAAE;YACf,IAAI,CAAC9E,KAAK,CAAC+C,QAAQ,CAACoB,GAAG,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC;YAC9C,IAAI,CAAC1B,WAAW,CAAC,CAAC;YAClB,IAAI,CAAC3B,MAAM,CAACyB,eAAe,CAAC8B,cAAc,CAAC;YAC3C,IAAI,CAACvD,MAAM,CAAC2B,WAAW,CAAC,CAAC;UAC7B;QACJ;QACA,oBAAOtD,KAAA,CAAAoC,aAAA;UAAKI,SAAS,EAAE,aAAa,IAAEmD,cAAc,GAAG,oBAAoB,GAAG,EAAE,CAAE;UAACjD,OAAO,EAAEoD,WAAW,CAAClD,IAAI,CAAC,IAAI,CAAE;UAACoD,GAAG,EAAEV;QAAG,gBACxHtF,KAAA,CAAAoC,aAAA,cAAMwD,GAAS,CAAC,EAACD,cAAc,gBAAI3F,KAAA,CAAAoC,aAAA;UAAMI,SAAS,EAAC;QAAmB,GAAE0C,cAAqB,CAAC,GAAI,EACjG,CAAC;MACV,CAAC,CAAC;IACN,CAAC,MAAM;MACHL,YAAY,GAAG,IAAI,CAAChE,KAAK,CAAC+C,QAAQ,CAACkB,GAAG,CAAC,CAACmB,GAAG,EAAEjB,GAAG,KAAI;QAChD,MAAM;UAACkB,SAAS;UAACC,eAAe;UAACC,aAAa;UAACV,MAAM;UAACW;QAAmB,CAAC,GAAGJ,GAAG;;QAEhF;QACA,MAAMN,cAAc,GAAGU,mBAAmB,GAAG,CAAC;QAE9C,IAAIT,GAAG,gBAAG5F,KAAA,CAAAoC,aAAA,eAAOsD,MAAa,CAAC;QAC/B,IAAGQ,SAAS,IAAI,IAAI,IAAIA,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE;UAC1CV,GAAG,GAAG,EAAE;UACR,MAAMW,SAAS,GAAG,EAAE;UACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,SAAS,CAACI,MAAM,EAAEE,CAAC,EAAE,EAAE;YACvC,MAAMC,CAAC,GAAGP,SAAS,CAACM,CAAC,CAAC;YACtB,MAAM;cAAClB,EAAE;cAACoB,IAAI;cAACC,QAAQ;cAACtB;YAAK,CAAC,GAAGoB,CAAC;YAClC,MAAMG,UAAU,GAAGvB,KAAK,CAACQ,IAAI;YAE7B,SAASgB,IAAIA,CAACC,CAAC,EAAE;cACb,OAAOA,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,UAAU,CAAC,GAAG,EAAC,EAAE,CAAC;YAC7C;YAEA,MAAMC,KAAK,GAAGV,SAAS,CAACW,IAAI,CAAEC,CAAC,IAAGN,IAAI,CAACM,CAAC,CAAC,MAAM,CAAC,CAAC,KAAKN,IAAI,CAACH,IAAI,CAAC,IAAIG,IAAI,CAACM,CAAC,CAAC,UAAU,CAAC,CAAC,KAAKN,IAAI,CAACF,QAAQ,CAAC,CAAC;YAC3G,IAAGM,KAAK,IAAI,IAAI,EAAE;cACd,IAAGA,KAAK,CAAC5B,KAAK,CAACQ,IAAI,IAAIe,UAAU,EAAE;gBAC/BH,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI;cACtB,CAAC,MAAM;gBACHA,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI;cACzB;YACJ;YACAF,SAAS,CAAChE,IAAI,CAACkE,CAAC,CAAC;UACrB;UACAb,GAAG,GAAGW,SAAS,CAACzB,GAAG,CAAC,CAAC;YAACQ,EAAE;YAACoB,IAAI;YAACC,QAAQ;YAACtB,KAAK;YAAC+B,SAAS;YAACC;UAAM,CAAC,EAAErC,GAAG,KAAG;YAClE,IAAGqC,MAAM,EAAE;cACP,OAAO,IAAI;YACf;YACA,IAAGD,SAAS,EAAE;cACV,oBAAOpH,KAAA,CAAAoC,aAAA;gBAAM4D,GAAG,EAAEhB;cAAI,GAAC,GAAC,EAAC,GAAGK,KAAK,CAACQ,IAAI,EAAE,EAAC,GAAO,CAAC;YACrD;YACA,oBAAO7F,KAAA,CAAAoC,aAAA;cAAM4D,GAAG,EAAEhB;YAAI,GAAE,IAAIK,KAAK,CAACQ,IAAI,KAAKa,IAAI,IAAIC,QAAQ,EAAS,CAAC;UACzE,CAAC,CAAC;UACFT,SAAS,CAACoB,OAAO,CAACb,CAAC,IAAEA,CAAC,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;UAC5CP,SAAS,CAACoB,OAAO,CAACb,CAAC,IAAEA,CAAC,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;QAC7C;QACA,SAASX,WAAWA,CAAA,EAAG;UACnBxF,UAAU,eAACN,KAAA,CAAAoC,aAAA,CAAC1C,oBAAoB;YAACgG,MAAM,EAAEA,MAAO;YAACQ,SAAS,EAAEA;UAAU,CAAC,CAAC,CAAC;UACzE,IAAGP,cAAc,EAAE;YACf,IAAI,CAAC9E,KAAK,CAAC+C,QAAQ,CAACoB,GAAG,CAAC,CAAC,qBAAqB,CAAC,GAAG,CAAC;YACnD,IAAI,CAAC1B,WAAW,CAAC,CAAC;YAClB,IAAI,CAAC3B,MAAM,CAACyB,eAAe,CAACiD,mBAAmB,CAAC;YAChD,IAAI,CAAC1E,MAAM,CAAC2B,WAAW,CAAC,CAAC;UAC7B;QACJ;QACA,oBAAOtD,KAAA,CAAAoC,aAAA;UAAKI,SAAS,EAAE,aAAa,IAAEmD,cAAc,GAAG,oBAAoB,GAAG,EAAE,CAAE;UAACjD,OAAO,EAAEoD,WAAW,CAAClD,IAAI,CAAC,IAAI,CAAE;UAACoD,GAAG,EAAEI,aAAa,CAACd;QAAG,gBACtItF,KAAA,CAAAoC,aAAA,cAAMwD,GAAS,CAAC,EAACD,cAAc,gBAAI3F,KAAA,CAAAoC,aAAA;UAAMI,SAAS,EAAC;QAAmB,GAAE6D,mBAA0B,CAAC,GAAI,EACtG,CAAC;MACV,CAAC,CAAC;IACN;IAEA,oBACIrG,KAAA,CAAAoC,aAAA;MAAKI,SAAS,EAAC;IAAmB,gBAC9BxC,KAAA,CAAAoC,aAAA,cACKyC,YAAY,eACb7E,KAAA,CAAAoC,aAAA;MAAKI,SAAS,EAAC,WAAW;MAACE,OAAO,EAAE,IAAI,CAAC0B;IAAiB,GACrD,IAAI,CAACvD,KAAK,CAACgD,aAAa,IAAI,IAAI,GAAG,IAAI,gBACpC7D,KAAA,CAAAoC,aAAA,eAAO,IAAI,CAACvB,KAAK,CAACwD,WAAW,GAAG,WAAW,GAAG,gBAAuB,CACxE,CACJ,CAAC,eACNrE,KAAA,CAAAoC,aAAA;MAAOwC,WAAW,EAAC,mBAAmB;MAAC2C,QAAQ,EAAE,IAAI,CAACC;IAAsB,CAAC,CAC5E,CAAC;EAEd;EACAC,gBAAgB,GAAG1H,SAAS,CAAC,CAAC;EAE9B2H,eAAe,GAAG,CAAC,CAAC;EACpBC,mBAAmB,GAAG,CAAC,CAAC;EACxBH,qBAAqB,GAAII,KAAK,IAAG;IAC7B,MAAMhG,KAAK,GAAG,IAAI;IAElB,MAAMiG,GAAG,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAE9B,IAAGF,GAAG,CAACvB,MAAM,GAAG,CAAC,EAAE;MACf,IAAI,CAACnD,QAAQ,CAAC;QAACU,aAAa,EAAE;MAAI,CAAC,CAAC;MACpC;IACJ;IAEA,MAAMmE,MAAM,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;IAC5B,IAAI,CAACP,mBAAmB,GAAGK,MAAM;IACjCG,UAAU,CAAC,MAAI;MACX,IAAGvG,KAAK,CAAC+F,mBAAmB,KAAKK,MAAM,EAAE;QACrC;MACJ;MACA,MAAMI,KAAK,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC;MAC3BtG,KAAK,CAAC8F,eAAe,GAAGU,KAAK;MAC7BhI,KAAK,CAAC,eAAe,EAAE4C,GAAG,IAAG;QACzB,IAAGpB,KAAK,CAAC8F,eAAe,KAAKU,KAAK,EAAE;UAChC;QACJ;QACAxG,KAAK,CAACuB,QAAQ,CAAC;UAACU,aAAa,EAAEb;QAAG,CAAC,CAAC;MACxC,CAAC,EAAC,IAAI,EAAC;QACHwB,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UACF4D,GAAG,EAAER;QACT;MACJ,CAAC,CAAC;IACN,CAAC,EAAC,GAAG,CAAC;EACV,CAAC;AACL","ignoreList":[]}