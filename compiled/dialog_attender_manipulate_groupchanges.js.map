{"version":3,"file":"dialog_attender_manipulate_groupchanges.js","names":["Dialog","showDialog","miesiacF","PlaceType","ClassGroupSelectorComp","useEffect","useState","createRef","useCallback","cloneElement","React","DialogAttenderManipulateGroupChanges","Component","attenderId","state","groupChanges","processing","constructor","props","errorF","err","console","log","injectRField","gather","attenderData","render","place","season","groupChangesRows","map","change","id","idRoku","group","active","dateJoined","dateLeft","name","AlterDateCell","date","setDate","editing","setEditing","setProcessing","locked","setLocked","inpDate","setInpDate","mode","createElement","className","type","value","onChange","e","target","onClick","obj","fet","method","body","JSON","stringify","then","res","catch","formatDateStr","str","split","key","setState","filter","ch","title","AddNewGroupchangeRow","parent","showHelp","groupId","setGroupId","placeId","nazwa","timestamp","startDate","endDate","dateFrom","setDateFrom","dateTo","setDateTo","isGroupSelected","val","ev","defaultValue","push","HelpDialog"],"sources":["../uncompiled/dialog_attender_manipulate_groupchanges.js"],"sourcesContent":["import {Dialog,showDialog} from \"./dialog.js\";\r\nimport {miesiacF, PlaceType} from \"./panel_platnosci.js\";\r\nimport {ClassGroupSelectorComp} from \"./components_common.js\";\r\nconst { useEffect,useState,createRef,useCallback,cloneElement } = React\r\n\r\nexport class DialogAttenderManipulateGroupChanges extends React.Component {\r\n    attenderId = -1;\r\n    state = {groupChanges:null,processing:false}\r\n    constructor(props) {\r\n        super(props)\r\n        this.attenderId = props.attenderId\r\n\r\n        const errorF = (err)=>{\r\n            console.log(err)\r\n            injectRField(this,\"error\")(err)\r\n        }\r\n\r\n        gather(`uczestnicy/${this.attenderId}/groupChanges`,injectRField(this,\"groupChanges\"),errorF)\r\n        gather(`uczestnicy/${this.attenderId}/season`,injectRField(this,\"season\"),errorF)\r\n        gather(`uczestnicy/${this.attenderId}`,attenderData=>{\r\n            injectRField(this,\"attender\")(attenderData)\r\n\r\n            gather(`uczestnicy/${this.attenderId}/place`,injectRField(this,\"place\"),errorF)\r\n        },errorF)\r\n\r\n        //gather(`uczestnicy/${this.attenderId}/at`,this,\"place\",errorF)\r\n    }\r\n\r\n    render() {\r\n        if(this.state.groupChanges == null)\r\n            return null\r\n        if(this.state.place == null)\r\n            return null\r\n        if(this.state.season == null)\r\n            return null\r\n\r\n        const attenderId = this.attenderId\r\n\r\n        const groupChangesRows = this.state.groupChanges.map(change=>{\r\n            const {id,idRoku,group,active,dateJoined,dateLeft} = change\r\n            const {name} = group ?? {}\r\n\r\n            function AlterDateCell(props) {\r\n                const [date,setDate] = useState(props.date)\r\n                const [editing,setEditing] = useState(false)\r\n                const [processing,setProcessing] = useState(false)\r\n                const [locked,setLocked] = useState(false)\r\n\r\n                const [inpDate,setInpDate] = useState(date)\r\n\r\n                const mode = props.mode\r\n\r\n                if(editing) {\r\n                    return <div className={`alter_date_el editing${processing ? \" processing\" : \"\"}`}>\r\n                        <input type=\"date\" value={inpDate} onChange={e=> setInpDate(e.target.value)}/>\r\n                        <i className=\"fa-solid fa-floppy-disk\" onClick={() => {\r\n                            setProcessing(true)\r\n                            setLocked(true)\r\n\r\n                            const obj = {id}\r\n                            if(mode == \"joined\") {\r\n                                obj[\"dateJoined\"] = inpDate\r\n                            } else {\r\n                                obj[\"dateLeft\"] = inpDate\r\n                            }\r\n\r\n                            fet(\"groupChanges\", {\r\n                                method: \"PATCH\", body: JSON.stringify(obj)\r\n                            }).then(res => {\r\n                                setProcessing(false)\r\n                                setDate(inpDate)\r\n                                setLocked(false)\r\n                                setEditing(false)\r\n                            }).catch(err => {\r\n                                setProcessing(false)\r\n                                setLocked(false)\r\n\r\n                                console.log(err)\r\n                            })\r\n                        }}></i>\r\n                        <i className=\"fa-solid fa-x\" onClick={() => {\r\n                            setInpDate(date)\r\n                            setEditing(false)\r\n                        }}></i>\r\n                    </div>\r\n                }\r\n\r\n                function formatDateStr(str) {\r\n                    const date = str.split(\"-\")\r\n                    return date[2]+\" . \"+date[1]+\" . \"+date[0]\r\n                }\r\n\r\n                return <div className=\"alter_date_el\">\r\n                    <span>{formatDateStr(date)}</span>\r\n                    <i className=\"fa-solid fa-pen\" onClick={()=>{\r\n                        setEditing(true)\r\n                    }}></i>\r\n                </div>\r\n            }\r\n\r\n            return <tr key={id} className={`${this.state.processing ? \" processing\" : \"\"}`}>\r\n                <td>{\r\n                    name == null\r\n                        ? <span className=\"red\">wypisany</span>\r\n                        : <span>{name}</span>\r\n                }</td>\r\n                <td className=\"cm_cell\"><AlterDateCell date={dateJoined} id={id} mode=\"joined\"/></td>\r\n                <td className=\"cm_cell\"><AlterDateCell date={dateLeft} id={id} mode=\"left\"/></td>\r\n                <td>\r\n                    <div>\r\n                        <i className=\"fa-solid fa-trash grow\" onClick={() => {\r\n                            this.setState(state=>({...state,processing:true}))\r\n                            fet(`groupChanges/${id}`,{\r\n                                method:\"DELETE\"\r\n                            }).then(res=>{\r\n                                this.setState(state=>({\r\n                                    ...state,\r\n                                    groupChanges:state.groupChanges.filter(ch=>ch.id != id),\r\n                                    processing:false\r\n                                }))\r\n                            })\r\n                        }}></i>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        })\r\n\r\n        return <Dialog title=\"przepisy uczestnika\">\r\n            <div className=\"dialog_attender_manipulate_groupchanges\">\r\n                    <table>\r\n                        <tbody>\r\n                        <tr key={\"tit\"}>\r\n                            <th>grupa</th>\r\n                            <th>data dołączenia</th>\r\n                            <th>data opuszczenia</th>\r\n                            <th>akcja</th>\r\n                        </tr>\r\n                        {groupChangesRows}\r\n                        <AddNewGroupchangeRow place={this.state.place} season={this.state.season} attenderId={attenderId} parent={this}/>\r\n                        </tbody>\r\n                    </table>\r\n                    <input onClick={showHelp} value=\"pomoc\" type=\"button\"/>\r\n                </div>\r\n\r\n        </Dialog>\r\n    }\r\n}\r\n\r\nfunction AddNewGroupchangeRow(props) {\r\n    const [groupId,setGroupId] = useState(null)\r\n    const placeId = props.place.id\r\n    const attenderId = props.attenderId\r\n    const {id,nazwa,timestamp,startDate,endDate} = props.season\r\n    const [dateFrom,setDateFrom] = useState(startDate)\r\n    const [dateTo,setDateTo] = useState(endDate)\r\n    const [processing,setProcessing] = useState(false)\r\n\r\n    const isGroupSelected = ()=> {\r\n        return groupId != null && groupId != 0\r\n    }\r\n\r\n    return <tr className={`newentry${processing ? \" processing\" : \"\"}`}>\r\n        <td><ClassGroupSelectorComp placeId={placeId} onChange={val=>setGroupId(val)}/></td>\r\n        <td><input type=\"date\" onChange={ev=>setDateFrom(ev.target.value)} defaultValue={startDate}/></td>\r\n        <td><input type=\"date\" onChange={ev=>setDateTo(ev.target.value)} defaultValue={endDate}/></td>\r\n        <td>\r\n            <div><i className={`fa-solid fa-plus grow${!isGroupSelected() ? \" incomplete\" : \"\"}`} onClick={()=>{\r\n                if(!isGroupSelected()) {\r\n                    return\r\n                }\r\n                setProcessing(true)\r\n                fet(\"groupChanges\",{\r\n                    method:\"POST\",\r\n                    body: {\r\n                        dateJoined: dateFrom,\r\n                        dateLeft: dateTo,\r\n                        groupId: groupId,\r\n                        attenderId:attenderId\r\n                    }\r\n                }).then(res=>{\r\n                    setProcessing(false)\r\n                    props.parent.setState(state=>{\r\n                        state.groupChanges.push(res)\r\n                        return {\r\n                            ...state,\r\n                            groupChanges:state.groupChanges\r\n                        }\r\n                    })\r\n                })\r\n            }}></i></div>\r\n        </td>\r\n    </tr>\r\n}\r\n\r\n\r\n\r\nfunction showHelp() {\r\n    function HelpDialog(props) {\r\n\r\n        return <Dialog>\r\n            <div title=\"pomoc\">\r\n                <p>narzędzie służy do ustalania w jakiej grupie był dany uczestnik w danym okresie czasu</p>\r\n                <p>każdy wiersz to okres czasu jaki uczestnik spędził w jakiejś grupie tanecznej, dalej \"okres\"</p>\r\n                <p>system zlicza zajęcia grup z danych okresów i na podstawie tego oblicza należności</p>\r\n                <p>zakresy dat okresów NIE MOGĄ się na siebie nakładać</p>\r\n                <p>zakresy dat okresów mogą mieć pomiędzy sobą \"dziury\", dla systemu oznacza to tyle że uczestnik w tamtym okresie czasu (w czasie dziury) nie uczęszczał na żadne zajęcia - był wypisany</p>\r\n                <p>pasek dodawania nowego okresu na dole ma z automatu wpisaną datę rozpoczęcia i zakończenia aktualnego sezonu, dzięki czemu można szybko dodać zakres na cały sezon (rok zajęciowy)</p>\r\n                <p>WAŻNE: nie zapomnij dodać okresu dla grupy w której aktualnie jest uczestnik!!!</p>\r\n            </div>\r\n        </Dialog>\r\n    }\r\n\r\n    showDialog(<HelpDialog/>)\r\n}\r\n\r\n/*setTimeout(()=>{\r\n    showDialog(<DialogAttenderManupulatePayments attenderId={9821}/>)\r\n},1000)*/"],"mappings":"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"}