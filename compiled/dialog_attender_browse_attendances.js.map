{"version":3,"file":"dialog_attender_browse_attendances.js","names":["Dialog","showDialog","miesiacF","PlaceType","gather","zebra","ClassGroupSelectorComp","jsx","___EmotionJSX","useEffect","useState","createRef","useCallback","cloneElement","React","DialogAttenderBrowseAttendances","Component","attenderId","state","payments","season","groupChanges","place","biggestCycleNum","constructor","props","reactEl","errorF","err","console","log","setState","error","agcs","forEach","agc","fet","id","then","res","oldState","map","foundGc","classes","catch","attender","miejsce","rodzaj","TYPE_ADULTS","groupId","dialog","render","groupchangesRows","gc","idRoku","group","active","dateJoined","dateLeft","monthNamesEls","monthClassesEls","endDate","Date","startDate","setMonth","getMonth","month","classesInThisMonth","filter","cl","classDate","date","classMonth","classesInThisMonthEls","classDay","getDate","presences","thisAttenderPresence","findLast","pres","Presence","presence","setPresence","color","presenceInt","createElement","className","style","backgroundColor","onClick","newPresenceInt","method","body","classId","class","length","push","key","tab","name","ref","title","imie","nazwisko"],"sources":["../uncompiled/dialog_attender_browse_attendances.js"],"sourcesContent":["import {Dialog,showDialog} from \"./dialog.js\";\r\nimport {miesiacF, PlaceType} from \"./panel_platnosci.js\";\r\nimport {gather, zebra} from \"./main.js\";\r\nimport {ClassGroupSelectorComp} from \"../compiled/components_common\";\r\nconst { useEffect,useState,createRef,useCallback,cloneElement } = React\r\n\r\n\r\nexport class DialogAttenderBrowseAttendances extends React.Component {\r\n    attenderId = -1;\r\n    state = {payments:null,season:null,groupChanges:null,place:null,biggestCycleNum:null}\r\n    constructor(props) {\r\n        super(props)\r\n        this.attenderId = props.attenderId\r\n\r\n        const reactEl = this\r\n\r\n        const errorF = (err)=>{\r\n            console.log(err)\r\n            this.setState({...this.state, error: err})\r\n        }\r\n\r\n        gather(`uczestnicy/${this.attenderId}/season`,this,\"season\",errorF)\r\n        gather(`uczestnicy/${this.attenderId}/groupChanges`,this,\"groupChanges\",errorF,(agcs=>{\r\n            agcs.forEach(agc=>{\r\n                fet(`groupChanges/${agc.id}/classes`,null).then(res=>{\r\n                    reactEl.setState(oldState=>{\r\n                        oldState.groupChanges = oldState.groupChanges.map(foundGc=>{\r\n                            if(foundGc.id === agc.id) {\r\n                                foundGc.classes = res\r\n                            }\r\n                            return foundGc\r\n                        })\r\n                        return oldState\r\n                    })\r\n                }).catch(err=>{\r\n\r\n                })\r\n            })\r\n        }))\r\n\r\n        gather(`uczestnicy/${this.attenderId}`,this,\"attender\",errorF,(attender)=>{\r\n            gather(`uczestnicy/${this.attenderId}/place`,this,\"place\",errorF,(miejsce)=>{\r\n                const rodzaj = miejsce.rodzaj\r\n                if(rodzaj == PlaceType.TYPE_ADULTS) {\r\n                    gather(`grupy/${attender.groupId}/biggestCycleNum`,this,\"biggestCycleNum\",errorF)\r\n                }\r\n            })\r\n        })\r\n        //gather(`uczestnicy/${this.attenderId}/at`,this,\"place\",errorF)\r\n    }\r\n    dialog = createRef()\r\n\r\n    render() {\r\n        if(this.state.season == null)\r\n            return null\r\n        if(this.state.groupChanges == null)\r\n            return null\r\n        if(this.state.place == null)\r\n            return null\r\n\r\n\r\n        const groupchangesRows = this.state.groupChanges.map(gc=> {\r\n            const {id, idRoku, group, active, dateJoined, dateLeft, classes} = gc\r\n\r\n            const monthNamesEls = []\r\n            const monthClassesEls = []\r\n\r\n            if (classes != null) {\r\n                const endDate = new Date(this.state.season.endDate)\r\n                const startDate = new Date(this.state.season.startDate)\r\n                for (; startDate < endDate; startDate.setMonth(startDate.getMonth() + 1)) {\r\n                    const month = startDate.getMonth() + 1\r\n\r\n                    const classesInThisMonth = classes.filter(cl=>{\r\n                        const classDate = new Date(cl.date)\r\n                        const classMonth = classDate.getMonth()+1\r\n                        return classMonth === month\r\n                    })\r\n\r\n                    const classesInThisMonthEls = classesInThisMonth.map(cl=>{\r\n                        const classDate = new Date(cl.date)\r\n                        const classDay = classDate.getDate()\r\n\r\n                        const presences = cl.presences\r\n                        if(presences == null) {\r\n                            return null\r\n                        }\r\n                        const thisAttenderPresence = presences.findLast(pres=>pres.attender = this.attenderId)\r\n\r\n                        function Presence(props) {\r\n                            const [presence, setPresence] = useState(props.presence);\r\n\r\n                            let color = null\r\n                            const presenceInt = presence?.presence\r\n\r\n                            if(presenceInt === 0) {\r\n                                color = \"white\"\r\n                            } else if(presenceInt === 1) {\r\n                                color = \"#7ac63a\"\r\n                            } else if(presenceInt === 0) {\r\n                                color = \"grey\"\r\n                            } else if(presenceInt === 0) {\r\n                                color = \"red\"\r\n                            } else if(presenceInt === 0) {\r\n                                color = \"orange\"\r\n                            } else if(presenceInt === 0) {\r\n                                color = \"white\"\r\n                            }\r\n\r\n                            return <div className=\"presence_div\" style={{backgroundColor: color}} onClick={()=>{\r\n                                const newPresenceInt = presenceInt === 0 ? 1 : (presenceInt === 1 ? 2 : 0)\r\n\r\n                                if(presence === null) {\r\n                                    fet(\"presences\", {\r\n                                        method: \"POST\",\r\n                                        body: {\r\n                                            attenderId: props.attenderId,\r\n                                            classId : props.class.id,\r\n                                            presence : 1\r\n                                        }\r\n                                    }).then(res=>{\r\n                                        setPresence(res)\r\n                                    }).catch(err=>{})\r\n                                } else {\r\n                                    fet(\"presences\", {\r\n                                        method: \"PATCH\",\r\n                                        body: {\r\n                                            id: presence.id,\r\n                                            presence : newPresenceInt\r\n                                        }\r\n                                    }).then(res=>{\r\n                                        setPresence(res)\r\n                                    }).catch(err=>{})\r\n                                }\r\n\r\n                            }}>\r\n                                {classDay}\r\n                            </div>\r\n                        }\r\n\r\n                        return <Presence presence={thisAttenderPresence} attenderId={this.attenderId} class={cl}/>\r\n                    })\r\n\r\n                    if(classesInThisMonth.length > 0) {\r\n                        monthNamesEls.push(<th key={month}>{miesiacF(month)}</th>)\r\n                        monthClassesEls.push(\r\n                            <td key={month} className=\"month_classes_cell\">\r\n                                <div>\r\n                                    {classesInThisMonthEls}\r\n                                </div>\r\n                            </td>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n\r\n            const tab = monthNamesEls.length === 0 ?\r\n                <span>ładuje...</span>\r\n                :\r\n                <table className=\"months_table\">\r\n                <tbody>\r\n                <tr key=\"names\">\r\n                    {monthNamesEls}\r\n                </tr>\r\n                <tr key=\"classes\">\r\n                    {monthClassesEls}\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            return <tr key={group.id}>\r\n                <td>{group.name}</td>\r\n                <td>{dateJoined}</td>\r\n                <td>{dateLeft}</td>\r\n                <td>\r\n                    {tab}\r\n                </td>\r\n            </tr>\r\n        })\r\n\r\n        const attender = this.state.attender\r\n\r\n        return <Dialog ref={this.dialog} title={`obecności uczestnika [${attender.imie} ${attender.nazwisko}]`}>\r\n            <div className=\"dialog_attender_browser_attendances\">\r\n                <table className=\"big_table\">\r\n                    <tbody>\r\n                    <tr key={\"tit\"}>\r\n                    <th>grupa</th>\r\n                        <th>data dołączenia</th>\r\n                        <th>data opuszczenia</th>\r\n                        <th>zajęcia</th>\r\n                    </tr>\r\n                    {groupchangesRows}\r\n                    </tbody>\r\n                </table>\r\n            </div></Dialog>\r\n    }\r\n}\r\n\r\n/*setTimeout(()=>{\r\n    showDialog(<DialogAttenderManupulatePayments attenderId={9821}/>)\r\n},1000)*/"],"mappings":"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","ignoreList":[]}