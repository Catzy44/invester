{"version":3,"file":"wiadomosci_dialog.js","names":["kon","nitro","zebra","Dialog","showDialog","jsx","___EmotionJSX","useEffect","useState","useRef","useCallback","createRef","React","dialogList","OUT","IN","AWAITING","SENT","ERRORED","UNREAD","READ","NoPhoneConnectedFrag","Component","constructor","props","state","response","error","refresher","loadDataFromServer","setInterval","componentWillUnmount","clearInterval","render","createElement","className","WiadomosciUczestnika","textAreaRef","dialogRef","forceReloadAttListByPhoneNumOnLoad","number","attenders","uczestnikId","title","dialogCloseHandler","callbackSetter","forceReloadUczestnicyByNumber","dialogTitleUpdater","wiadomosci","title_set","selfhashstr","hashstr","finding","findIndex","d","console","log","root","unmount","push","instanceSecured","messagesContainerEl","setTimeout","loadMessagesFromServer","filter","componentDidUpdate","prevProps","prevState","_prevContext","current","el","scrollTo","scrollHeight","blacky","ref","onClose","contenerizeMessages","onKeyDown","taKeyDown","bind","placeholder","rows","onClick","send","generateStatusClass","status","last_message_type","last_message_date","element_arr_i","element_arr","messages_group","messages_group_inc","saveMessagesGroup","cur_messages_group","cur_group_type","cur_group_date","classes","key","join","addMessageToCurGroup","sms","createdTimestamp","content","id","readStatus","sentTimestamp","type","ReadStatusSwitcher","innReadStatus","setInnReadStatus","isProcessing","setIsProcessing","changeReadStatus","newStatus","patchedSms","method","body","ctExpl","split","date","time","event","targetElement","target","classList","add","length","tcl","parentNode","remove","i","ct","chid","markAllAsReadModuleIsFirstRun","fet","then","u","setState","catch","err","JSON","stringify","messageArr","latestReceivedSMS","findLast","map","setTitle","activeSeasonId","getActiveSeason","els","idx","imie","nazwisko","place","season","seasonId","showUczestnik","jumpToAttender","isCurrentSeason","seasonName","label","name","chidServer","ev","keyCode","value","fixtextarea","trim","packet","forceUpdate","element","style","height"],"sources":["../uncompiled/wiadomosci_dialog.js"],"sourcesContent":["import {kon, nitro, zebra} from \"./main.js\";\r\nimport {Dialog, showDialog} from \"./dialog.js\";\r\nconst { useEffect,useState,useRef,useCallback, createRef } = React\r\n\r\nlet dialogList = []\r\n\r\nconst OUT = 0\r\nconst IN = 1\r\nconst AWAITING = 0\r\nconst SENT = 1\r\nconst ERRORED = 2\r\nconst UNREAD = 0\r\nconst READ = 1\r\n\r\nclass NoPhoneConnectedFrag extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            response: -1,\r\n            error: null,\r\n            refresher: null\r\n        }\r\n\r\n        this.loadDataFromServer()\r\n\r\n        this.state.refresher = setInterval(()=>{\r\n            this.loadDataFromServer()\r\n        },10000)\r\n    }\r\n    loadDataFromServer() {\r\n        nitro(\"sms/toSend/seconds_passed_till_last\",this)\r\n    }\r\n    componentWillUnmount() {\r\n        if(this.state.refresher != null) {\r\n            clearInterval(this.state.refresher)\r\n        }\r\n    }\r\n    render() {\r\n        const {error,response} = this.state\r\n\r\n        if(error != null) {\r\n            return <div className=\"app_disconnected_warning\">\r\n                <i className=\"fa-solid fa-exclamation\"></i>\r\n            </div>\r\n        }\r\n\r\n        if(response == null || response === -1) {\r\n            return null\r\n        }\r\n\r\n        if(response < 60) {\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <div className=\"app_disconnected_warning\">\r\n                <div>Aplikacja SMS jest wyłączona<br/>wiadomości nie zostaną wysłane</div>\r\n                <i className=\"fa-solid fa-exclamation\"></i>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass WiadomosciUczestnika extends React.Component {\r\n    textAreaRef = null\r\n    dialogRef = null\r\n    forceReloadAttListByPhoneNumOnLoad = false\r\n    constructor(props) {\r\n        super(props);\r\n        const {number,attenders,uczestnikId,title,dialogCloseHandler,callbackSetter,forceReloadUczestnicyByNumber = false} = props\r\n        this.forceReloadAttListByPhoneNumOnLoad = forceReloadUczestnicyByNumber\r\n\r\n        this.dialogTitleUpdater = title\r\n        this.callbackSetter = callbackSetter\r\n\r\n        this.number = number;\r\n        this.attenders = attenders\r\n        this.uczestnikId = uczestnikId\r\n\r\n        this.state = {\r\n            wiadomosci: null,\r\n            error: null,\r\n        }\r\n\r\n        this.title_set = false\r\n\r\n        //allow only one instance\r\n        const selfhashstr = this.hashstr()\r\n        const finding = dialogList.findIndex((d)=>d.hashstr() === selfhashstr)\r\n        if(finding !== -1) {\r\n            //dialogCloseHandler(true)\r\n            console.log(\"FINDING EXIT\")\r\n            this.props.root.unmount()\r\n            return\r\n        }\r\n        dialogList.push(this)\r\n        this.instanceSecured = true;\r\n\r\n        this.textAreaRef = createRef()\r\n        this.messagesContainerEl = createRef()\r\n        this.dialogRef = createRef()\r\n        setTimeout(()=>{\r\n            this.loadMessagesFromServer()\r\n        },50)\r\n    }\r\n    hashstr() {\r\n        //return this.uczestnikId+\"\"+this.number;\r\n        return this.number;\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.refresher)\r\n        if(!this.instanceSecured) {\r\n            return\r\n        }\r\n        const selfhashstr = this.hashstr()\r\n        dialogList = dialogList.filter((d)=>d.hashstr() !== selfhashstr);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, _prevContext) {\r\n        if(this.messagesContainerEl == null || this.messagesContainerEl.current == null) {\r\n            return\r\n        }\r\n        const el = this.messagesContainerEl.current\r\n\r\n        el.scrollTo(0, el.scrollHeight)\r\n    }\r\n    render() {\r\n        if(this.state.error != null) {\r\n            return (\r\n                <div>\r\n                    <span>błąd!</span>\r\n                    <span>{this.error}</span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        return(\r\n            <Dialog title=\"Chat uczestnika\" blacky={true} ref={this.dialogRef} onClose={()=>{\r\n                this.props.root.unmount()\r\n            }}>\r\n                <div className=\"wiadomosci\">\r\n                    {\r\n                        this.state.wiadomosci == null ? null :\r\n                            <div ref={this.messagesContainerEl} className=\"messages_container\">\r\n                                {this.contenerizeMessages()}\r\n                            </div>\r\n                    }\r\n                    <div className=\"bot\">\r\n                        <textarea ref={this.textAreaRef} onKeyDown={this.taKeyDown.bind(this)} placeholder=\"Aa\" rows=\"1\"></textarea>\r\n                        <div onClick={() => {\r\n                            this.send()\r\n                        }}>\r\n                            <i className=\"fa-solid fa-chevron-right\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <NoPhoneConnectedFrag/>\r\n                </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n    contenerizeMessages() {\r\n        let wiadomosci = this.state.wiadomosci;\r\n        const generateStatusClass = function (status) {\r\n            if (status === 0) {\r\n                return \"waiting\"\r\n            } else if (status === 0) {\r\n                return \"errored\"\r\n            }\r\n        }\r\n\r\n        let last_message_type = -1\r\n        let last_message_date = null\r\n\r\n        let element_arr_i = 0\r\n        let element_arr = []\r\n\r\n        let messages_group = []\r\n        let messages_group_inc = 0\r\n\r\n        function saveMessagesGroup(cur_messages_group, cur_group_type,cur_group_date) {\r\n            let classes = []\r\n            classes.push(last_message_type === 0 ? \"out\" : \"in\")\r\n\r\n            element_arr.push(<div key={element_arr_i} className={classes.join(\" \")}>{cur_messages_group}</div>)\r\n            element_arr_i++\r\n            messages_group_inc = 0\r\n\r\n            messages_group = []\r\n\r\n            if(last_message_type === -1 || last_message_type !== cur_group_type)\r\n                last_message_type = cur_group_type\r\n\r\n            if(last_message_date == null || last_message_date !== cur_group_date)\r\n                last_message_date = cur_group_date\r\n        }\r\n\r\n        function addMessageToCurGroup(sms) {\r\n            const {createdTimestamp,content,id,number,readStatus,sentTimestamp,status,type} = sms\r\n\r\n            function ReadStatusSwitcher(props) {\r\n                const [innReadStatus, setInnReadStatus] = useState(readStatus);\r\n                const [isProcessing, setIsProcessing] = useState(false);\r\n                function changeReadStatus(newStatus) {\r\n                    setIsProcessing(true)\r\n                    zebra(`sms`,(patchedSms)=>{\r\n                        setIsProcessing(false)\r\n                        setInnReadStatus(patchedSms.readStatus)\r\n                    },null,{\r\n                        method: \"PATCH\",\r\n                        body: {\r\n                            id: id,\r\n                            readStatus: newStatus\r\n                        }\r\n                    })\r\n                }\r\n                return <span className={`clickable${isProcessing ? \" processing\" : \"\"}`} onClick={()=>{\r\n                    changeReadStatus(innReadStatus === READ ? UNREAD : READ)\r\n                }}>{innReadStatus === READ ? \"cofnij odczytanie\" : \"odczytaj\"}</span>\r\n            }\r\n\r\n            const ctExpl = createdTimestamp?.split(\"T\")\r\n            const date = ctExpl?.[0]\r\n            const time = ctExpl?.[1]?.split(\"\\.\")[0]\r\n\r\n            messages_group.push(\r\n                <div className = {generateStatusClass(sms.status)} key={messages_group_inc} onClick={(event)=>{\r\n                    const targetElement = event.target\r\n                    targetElement.classList.add(\"clickd\")\r\n                }}>\r\n                    {content == null || content.length === 0 ? \"[pusta]\" : content}\r\n                    <div className=\"message_details\">\r\n                        <div className=\"details_top\">\r\n                            <span>szczegóły</span>\r\n                            <i className=\"fa-solid fa-xmark popup-close-btn\" onClick={(event) => {\r\n                                //CLOSE MESSAGE DETAILS BUTTON (X)\r\n                                const targetElement = event.target\r\n                                const tcl = targetElement.parentNode.parentNode.parentNode\r\n                                tcl.classList.remove(\"clickd\")\r\n                            }}></i>\r\n                        </div>\r\n                        <span>data: {date}</span>\r\n                        <span>godzina: {time}</span>\r\n                        {type === OUT ?\r\n                            <span>status: {status === AWAITING ? \"czeka\" : status === SENT ? \"wysłana\" : \"błąd\"}</span> : null}\r\n                        {type === IN ? <ReadStatusSwitcher/> : null}\r\n                    </div>\r\n                </div>\r\n            )//add messages to messages group\r\n            messages_group_inc++\r\n        }\r\n\r\n        for(let i = 0; i < wiadomosci.length; i++) {\r\n            const sms = wiadomosci[i]\r\n            const type = sms[\"type\"]\r\n            const ct = sms[\"createdTimestamp\"]\r\n            const date = ct == null ? null : ct.split(\"T\")[0]\r\n\r\n            if(i === 0) {\r\n                //FIRST MESSEAGE IN CHAT\r\n                element_arr.push(<div key={element_arr_i} className=\"date\">Początek konwersacji</div>)\r\n                element_arr_i++\r\n                element_arr.push(<div key={element_arr_i} className=\"date\">{date}</div>)\r\n                element_arr_i++\r\n\r\n                addMessageToCurGroup(sms)\r\n                last_message_type = type\r\n\r\n                if(wiadomosci.length === 1) {\r\n                    saveMessagesGroup(messages_group,type,date)\r\n                }\r\n            } else {\r\n                //SECOND MESSAGE IN CHAT, OR THIRD, OR LAST...\r\n                if(last_message_type !== type) {//current message type differs from last messages type\r\n                    saveMessagesGroup(messages_group,type,date)\r\n                }\r\n                if(last_message_date !== date) {//current message date differs from last messages date\r\n                    saveMessagesGroup(messages_group,type,date)\r\n                    element_arr.push(<div key={element_arr_i} className=\"date\">{date}</div>)\r\n                    element_arr_i++\r\n                }\r\n                addMessageToCurGroup(sms)\r\n                if(i === wiadomosci.length-1) {\r\n                    //last message in chat\r\n                    saveMessagesGroup(messages_group,type,date)\r\n                }\r\n            }\r\n        }\r\n        return element_arr;\r\n    }\r\n\r\n    chid = -1\r\n    markAllAsReadModuleIsFirstRun = true\r\n    loadMessagesFromServer(){\r\n        if(this.number == null || this.forceReloadAttListByPhoneNumOnLoad) {\r\n            this.forceReloadAttListByPhoneNumOnLoad = false\r\n            fet(`uczestnicy/${this.uczestnikId}/with_miejsce`).then(u=>{\r\n                this.attenders = [u]\r\n                this.number = u['telefonOpiekuna']\r\n                if(this.number == null) {\r\n                    this.setState({ error: \"BRAK NUMERU!\" })\r\n                    return\r\n                }\r\n                this.loadMessagesFromServer()\r\n            }).catch(err=>{\r\n                this.setState({ error: err })\r\n                throw err\r\n            })\r\n            //return\r\n        }\r\n\r\n        fet(`sms/by_number`,{\r\n            method:\"POST\",\r\n            body:JSON.stringify({number:this.number})\r\n        }).then(messageArr=>{\r\n            if(this.markAllAsReadModuleIsFirstRun) {\r\n                this.markAllAsReadModuleIsFirstRun = false\r\n\r\n                if(messageArr != null && messageArr.length > 0) {\r\n                    const latestReceivedSMS = messageArr.findLast(sms=> sms.type === IN && sms.readStatus === UNREAD)\r\n                    if(latestReceivedSMS != null) {//LATEST RECEIVED SMS ISM THERE AND IS UNREAD!\r\n                        //mark all as read (SERVER SIDE)\r\n                        fet(`sms/by_number/mark_all_read`,{method: \"POST\", body: JSON.stringify({number:this.number})},null,false)\r\n                        //mark all as read (CLIENT SIDE)\r\n                        messageArr = messageArr.map(sms=>{\r\n                            if(sms.readStatus === UNREAD) {\r\n                                sms.readStatus = READ\r\n                            }\r\n                            return sms\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            this.setState({\r\n                wiadomosci: messageArr\r\n            })\r\n        }).catch(err=>{\r\n            this.setState({ error: err })\r\n        })\r\n\r\n        if(this.attenders == null) {\r\n            this.dialogRef.current.setTitle(this.number)\r\n        } else {\r\n            const activeSeasonId = getActiveSeason()//LEGACY!\r\n\r\n            const els = this.attenders.map((u,idx)=>{\r\n                const {id,imie,nazwisko,place,season} = u\r\n                const seasonId = (season != null && season.id != null) ? season.id : null;\r\n\r\n                const showUczestnik = ()=>{\r\n                    jumpToAttender(seasonId,place.id,id)\r\n                }\r\n\r\n                const isCurrentSeason = activeSeasonId == seasonId\r\n\r\n                const seasonName = (season != null && season.label != null) ? `[${season.label}]` : \"\";\r\n                return <span className={\"click\"+(isCurrentSeason ? \"\" : \" not_curr_season\")} onClick={showUczestnik} key={idx}>{`${seasonName} [${place.name}] ${imie} ${nazwisko}`}</span>\r\n            })\r\n            this.dialogRef.current.setTitle(<div>{els}</div>)\r\n        }\r\n\r\n        if(this.refresher == null) {\r\n            this.refresher = setInterval((ref)=>{\r\n                if(this.state.wiadomosci != null ) {\r\n                    zebra(\"sms/by_number/chid\",(chidServer)=>{\r\n                        if(this.chid == -1) {\r\n                            this.chid = chidServer\r\n                            return\r\n                        }\r\n                        if(this.chid == chidServer) {\r\n                            return\r\n                        }\r\n                        this.chid = chidServer\r\n                        this.loadMessagesFromServer()\r\n                    },kon(this,\"error\"),{method:\"POST\",body:JSON.stringify({number:this.number})})\r\n                    return\r\n                }\r\n                this.loadMessagesFromServer()\r\n            },2000);\r\n        }\r\n    }\r\n\r\n    taKeyDown(ev) {\r\n        if(this.textAreaRef.current == null) {\r\n            return\r\n        }\r\n        const el = this.textAreaRef.current\r\n\r\n        let key = ev.keyCode\r\n\r\n        if(ev[\"shiftKey\"]) {\r\n            return\r\n        }\r\n        if(key !== 13) {\r\n            return\r\n        }\r\n        if(ev[\"ctrlKey\"]) {\r\n            el.value = `${el.value}\\n`\r\n            this.fixtextarea(el)\r\n            return\r\n        }\r\n        /**/\r\n\r\n        this.send()\r\n    }\r\n    send() {\r\n        if(this.textAreaRef.current == null) {\r\n            return\r\n        }\r\n        const el = this.textAreaRef.current\r\n        const value = el.value\r\n\r\n        if(value.trim().length === 0) {\r\n            return\r\n        }\r\n\r\n        fet(`sms`,{\r\n            method:\"POST\",\r\n            body: JSON.stringify({\r\n                type: 0,\r\n                status: 0,\r\n                readStatus: 0,\r\n                content: el.value,\r\n                number: this.number\r\n            })\r\n        }).then(packet=>{\r\n            el.value = \"\"\r\n            this.fixtextarea(el)\r\n\r\n            this.state.wiadomosci.push(packet)\r\n            this.forceUpdate()\r\n        })\r\n    }\r\n\r\n    fixtextarea(element) {\r\n        element.style.height = 0\r\n        element.style.height = (element.scrollHeight-8) + \"px\"\r\n    }\r\n}\r\n\r\nexport default WiadomosciUczestnika"],"mappings":"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","ignoreList":[]}