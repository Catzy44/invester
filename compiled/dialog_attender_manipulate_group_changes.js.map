{"version":3,"file":"dialog_attender_manipulate_group_changes.js","names":["Dialog","showDialog","miesiacF","PlaceType","gather","zebra","ClassGroupSelectorComp","jsx","___EmotionJSX","useEffect","useState","createRef","useCallback","cloneElement","React","DialogAttenderManupulateGroupChanges","Component","attenderId","state","payments","season","groupChanges","place","biggestCycleNum","constructor","props","errorF","err","console","log","setState","error","attender","miejsce","rodzaj","TYPE_ADULTS","groupId","dialog","render","formatDate","date","datespl","split","groupchangesRows","map","gc","id","idRoku","group","active","dateJoined","dateLeft","DateCell","opt","isEditing","setIsEditing","enteredDate","setEnteredDate","processing","setProcessing","createElement","className","type","value","onChange","ev","target","onClick","body","res","groupChange","method","name","AddNewGroupChangeRow","selectedGroup","setSelectedGroup","dateFrom","setDateFrom","startDate","dateTo","setDateTo","endDate","groupSelectorChanged","key","placeId","push","ref","title","showHelp","HelpDialog"],"sources":["../uncompiled/dialog_attender_manipulate_group_changes.js"],"sourcesContent":["import {Dialog,showDialog} from \"./dialog.js\";\r\nimport {miesiacF, PlaceType} from \"./panel_platnosci.js\";\r\nimport {gather, zebra} from \"./main.js\";\r\nimport {ClassGroupSelectorComp} from \"../compiled/components_common\";\r\nconst { useEffect,useState,createRef,useCallback,cloneElement } = React\r\n\r\n\r\nexport class DialogAttenderManupulateGroupChanges extends React.Component {\r\n    attenderId = -1;\r\n    state = {payments:null,season:null,groupChanges:null,place:null,biggestCycleNum:null}\r\n    constructor(props) {\r\n        super(props)\r\n        this.attenderId = props.attenderId\r\n\r\n        const errorF = (err)=>{\r\n            console.log(err)\r\n            this.setState({...this.state, error: err})\r\n        }\r\n\r\n        gather(`uczestnicy/${this.attenderId}/payments/fresh`,this,\"payments\",errorF)\r\n        gather(`uczestnicy/${this.attenderId}/season`,this,\"season\",errorF)\r\n        gather(`uczestnicy/${this.attenderId}/groupChanges`,this,\"groupChanges\",errorF)\r\n        gather(`uczestnicy/${this.attenderId}`,this,\"attender\",errorF,(attender)=>{\r\n            gather(`uczestnicy/${this.attenderId}/place`,this,\"place\",errorF,(miejsce)=>{\r\n                const rodzaj = miejsce.rodzaj\r\n                if(rodzaj == PlaceType.TYPE_ADULTS) {\r\n                    gather(`grupy/${attender.groupId}/biggestCycleNum`,this,\"biggestCycleNum\",errorF)\r\n                }\r\n            })\r\n        })\r\n        //gather(`uczestnicy/${this.attenderId}/at`,this,\"place\",errorF)\r\n    }\r\n    dialog = createRef()\r\n\r\n    render() {\r\n        if(this.state.payments == null)\r\n            return null\r\n        if(this.state.season == null)\r\n            return null\r\n        if(this.state.groupChanges == null)\r\n            return null\r\n        if(this.state.place == null) {\r\n            return null\r\n        }\r\n\r\n        function formatDate(date) {\r\n            const datespl = date.split(\"-\")\r\n            return datespl[2]+\" - \"+datespl[1]+\" - \"+datespl[0]\r\n        }\r\n\r\n        const dialog = this\r\n        const groupchangesRows = this.state.groupChanges.map(gc=>{\r\n            const {id,idRoku,group,active,dateJoined,dateLeft} = gc\r\n\r\n            function DateCell(props) {\r\n                let date = props.opt === \"joined\" ? dateJoined : dateLeft\r\n\r\n                const [isEditing,setIsEditing] = useState(false)\r\n                const [enteredDate,setEnteredDate] = useState(date)\r\n                const [processing,setProcessing] = useState(false)\r\n\r\n                if(isEditing) {\r\n                    return <div className={`alter_date_el${processing ? \" processing\" : \"\"}`}>\r\n                        <input type=\"date\" value={enteredDate} onChange={(ev)=>{\r\n                            setEnteredDate(ev.target.value)\r\n                        }}/>\r\n                    <i className=\"fa-regular fa-floppy-disk\" onClick={() => {\r\n                        let body = null\r\n                        if(props.opt === \"joined\") {\r\n                            body = {\r\n                                id: id,\r\n                                dateJoined: enteredDate\r\n                            }\r\n                        } else {\r\n                            body = {\r\n                                id: id,\r\n                                dateLeft: enteredDate\r\n                            }\r\n                        }\r\n\r\n                        setProcessing(true)\r\n                        zebra(\"groupChanges\",(res)=>{\r\n                            setProcessing(false)\r\n\r\n                            dialog.setState(state=>{\r\n                                state.groupChanges = state.groupChanges.map(groupChange=>{\r\n                                    if(groupChange.id !== id) {\r\n                                        return groupChange\r\n                                    }\r\n                                    return res\r\n                                })\r\n                                return state\r\n                            })\r\n                        },null,{\r\n                            method: \"PATCH\",\r\n                            body: body\r\n                        })\r\n                        setIsEditing(false)\r\n                    }}></i>\r\n                    <i className=\"fa-solid fa-x\" onClick={() => {\r\n                        setEnteredDate(date)\r\n                        setIsEditing(false)\r\n                    }}></i>\r\n                </div>\r\n                }\r\n\r\n                return <div className={`alter_date_el${processing ? \" processing\" : \"\"}`}>\r\n                    <span>{formatDate(date)}</span>\r\n                    <i className=\"fa-solid fa-pen-to-square\" onClick={()=>{\r\n                        setIsEditing(true)\r\n                    }}></i>\r\n                </div>\r\n            }\r\n\r\n            return <tr>\r\n                <td>{group.name}</td>\r\n                <td><DateCell opt=\"joined\"/></td>\r\n                <td><DateCell opt=\"left\"/></td>\r\n                <td>\r\n                    <div>\r\n                        <i className=\"fa-solid fa-trash\"></i>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        })\r\n\r\n        function AddNewGroupChangeRow(props) {\r\n            const {selectedGroup,setSelectedGroup} = useState(0)\r\n            const {dateFrom,setDateFrom} = useState(season.startDate)\r\n            const {dateTo,setDateTo} = useState(season.endDate)\r\n            const groupSelectorChanged = (res)=>{\r\n                //console.log(res)\r\n                //console.log(selectedGroup)\r\n                //debugger\r\n                setSelectedGroup(res)\r\n            }\r\n\r\n            return <tr key=\"addnew\">\r\n                <td><ClassGroupSelectorComp placeId={dialog.state.place.id} onChange={groupSelectorChanged}/></td>\r\n                <td><input type=\"date\" value={dateFrom} onChange={(ev) => {\r\n                    setDateFrom(ev.target.value)\r\n                }}/></td>\r\n                <td><input type=\"date\" value={dateTo} onChange={(ev) => {\r\n                    setDateTo(ev.target.value)\r\n                }}/></td>\r\n                <td>\r\n                    <div>\r\n                        <i className=\"fa-solid fa-plus\" onClick={()=>{\r\n\r\n                            zebra(\"groupChanges\",(res)=>{\r\n                                dialog.setState(state=>{\r\n                                    state.groupChanges.push(res)\r\n                                    return state\r\n                                })\r\n                            },null,{\r\n                                method: \"POST\",\r\n                                body: {\r\n                                    groupId:selectedGroup,\r\n                                    attenderId: dialog.attenderId,\r\n                                    dateJoined: dateFrom,\r\n                                    dateLeft: dateTo\r\n                                }\r\n                            })\r\n\r\n                        }}></i>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        }\r\n\r\n        const season = this.state.season\r\n\r\n        return <Dialog ref={this.dialog} title=\"przepisy uczestnika\">\r\n            <div className=\"dialog_attender_manipulate_groupchanges\">\r\n                <table>\r\n                    <tbody>\r\n                    <tr key={\"tit\"}>\r\n                        <th>grupa</th>\r\n                        <th>data dołączenia</th>\r\n                        <th>data opuszczenia</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    {groupchangesRows}\r\n                    <AddNewGroupChangeRow/>\r\n                    </tbody>\r\n                </table>\r\n                <input onClick={showHelp} value=\"pomoc\" type=\"button\"/>\r\n            </div></Dialog>\r\n    }\r\n}\r\n\r\nfunction showHelp() {\r\n    function HelpDialog(props) {\r\n\r\n        return <Dialog>\r\n            <div title=\"pomoc\">\r\n                <p>ustalenie kwoty za dany miesiąc sprawia że staje się ona \"statyczna\" - żadna zmiana typu zmiana grupy zaj, zmiana rabatu, etc nie wpłynie na nią</p>\r\n                <p>usunięcie \"ustalenia kwoty\" spowoduje że kwota w danym miesiącu stanie się \"dynamiczna\" - znowu będą na nią wpływać wszystkie zmiany</p>\r\n                <p>kwota w kolumnie \"wyliczone\" jest kwotą wynikającą z \"aktualnego stanu rzeczy\" - jest to kwota policzona według dostępnych na ten moment danych</p>\r\n                <p>użycie strzałki spowoduje ustalenie kwoty za dany miesiąc na kwotę z kolumny \"wyliczone\"</p>\r\n                <p>program przy najbliższej możliwej okazji automatycznie zamknie wszystkie miesiące dla których może zostać wykonana weryfikacja płatności</p>\r\n                <p>program NIE zamyka automatycznie miesięcy w których nie było żadnych zajęć</p>\r\n                <p>program NIE zamyka automatycznie miesięcy jeżeli w dowolnym poprzedzającym miesiącu występuje zaległość</p>\r\n            </div>\r\n        </Dialog>\r\n    }\r\n\r\n    showDialog(<HelpDialog/>)\r\n}\r\n\r\n/*setTimeout(()=>{\r\n    showDialog(<DialogAttenderManupulatePayments attenderId={9821}/>)\r\n},1000)*/"],"mappings":"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","ignoreList":[]}